#!/usr/bin/env python3
"""Test MLN token availability."""
from api_clients.binance_client import BinanceClient
from modules.spot_usdt_processor import SpotUSDTProcessor
import json


def test_mln_binance():
    """Test MLN availability on Binance."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MLN –Ω–∞ Binance Spot")
    print("=" * 50)

    client = BinanceClient()
    symbol = "MLNUSDT"

    # Test 1: Get klines
    print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö (klines):")
    klines = client.get_spot_klines(symbol, "1d", limit=1)
    if klines:
        print(f"‚úÖ Klines –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–≤–µ—á–∞: {json.dumps(klines[0][:8], indent=2)}")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å klines")

    # Test 2: Get 24h ticker
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ 24h —Ç–∏–∫–µ—Ä–∞:")
    original_base_url = client.base_url
    client.base_url = client.spot_base_url

    ticker = client._make_request("/api/v3/ticker/24hr", {"symbol": symbol})

    client.base_url = original_base_url

    if ticker:
        print(f"‚úÖ –¢–∏–∫–µ—Ä –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        print(f"   –ü–æ—Å–ª–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${float(ticker.get('lastPrice', 0)):,.2f}")
        print(f"   –û–±—ä–µ–º 24h (USDT): ${float(ticker.get('quoteVolume', 0)):,.2f}")
        print(f"   –ò–∑–º–µ–Ω–µ–Ω–∏–µ 24h: {ticker.get('priceChangePercent')}%")
    else:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–∫–µ—Ä")

    # Test 3: Test with processor
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ SpotUSDTProcessor:")
    processor = SpotUSDTProcessor()
    result = processor.process_symbol('MLN')

    if not result.error:
        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞")
        print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {result.source_exchange.value}")
        print(f"   –°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º (30–¥): ${result.avg_volume_usdt:,.2f}")
        print(f"   –¢–µ–∫—É—â–∏–π –æ–±—ä–µ–º: ${result.current_volume_usdt:,.2f}")
        print(f"   –í—á–µ—Ä–∞—à–Ω–∏–π –æ–±—ä–µ–º: ${result.yesterday_volume_usdt:,.2f}")
        print(f"   –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è/–≤—á–µ—Ä–∞: {result.today_yesterday_volume_change_pct:.2f}%")
        print(f"   –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ (30–¥): ${result.avg_price_usdt:,.2f}")
        print(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${result.current_price_usdt:,.2f}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result.error}")


if __name__ == "__main__":
    test_mln_binance()